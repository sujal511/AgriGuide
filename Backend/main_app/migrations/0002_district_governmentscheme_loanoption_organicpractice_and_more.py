# Generated by Django 5.1.7 on 2025-05-27 08:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=50)),
                ('avg_annual_rainfall_mm', models.FloatField()),
                ('min_temp_c', models.FloatField()),
                ('max_temp_c', models.FloatField()),
                ('major_soil_types', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('implementing_agency', models.CharField(default='', max_length=100)),
                ('eligibility_criteria', models.TextField(default='')),
                ('benefits', models.TextField(default='')),
                ('application_process', models.TextField(default='')),
                ('documents_required', models.TextField(default='')),
                ('district_availability', models.CharField(default='All Karnataka districts', max_length=100)),
                ('crop_applicability', models.CharField(default='All', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LoanOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.CharField(default='', max_length=100)),
                ('loan_type', models.CharField(default='', max_length=50)),
                ('interest_rate', models.CharField(default='', max_length=50)),
                ('max_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tenure', models.CharField(default='', max_length=50)),
                ('eligibility', models.TextField(default='')),
                ('documents_required', models.TextField(default='')),
                ('processing_time', models.CharField(default='', max_length=50)),
                ('special_features', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganicPractice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_name', models.CharField(max_length=100)),
                ('description', models.TextField(default='')),
                ('applicable_crops', models.CharField(default='All crops', max_length=200)),
                ('implementation_cost_range', models.CharField(default='', max_length=50)),
                ('certification_requirements', models.TextField(default='')),
                ('benefits', models.TextField(default='')),
                ('challenges', models.TextField(default='')),
                ('time_to_results', models.CharField(default='', max_length=50)),
                ('soil_types', models.CharField(default='All soil types', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PestDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('pest', 'Pest'), ('disease', 'Disease')], default='pest', max_length=10)),
                ('affected_crops', models.CharField(default='', max_length=200)),
                ('symptoms', models.TextField(default='')),
                ('favorable_conditions', models.TextField(default='')),
                ('organic_control_methods', models.TextField(default='')),
                ('chemical_control_methods', models.TextField(default='')),
                ('preventive_measures', models.TextField(default='')),
                ('economic_threshold', models.CharField(default='', max_length=100)),
                ('region_prevalence', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.RemoveField(
            model_name='farmerchallenge',
            name='challenge',
        ),
        migrations.RemoveField(
            model_name='farmerchallenge',
            name='farmer',
        ),
        migrations.RemoveField(
            model_name='farmerinterest',
            name='interest',
        ),
        migrations.RemoveField(
            model_name='technologyrecommendation',
            name='farmer',
        ),
        migrations.RemoveField(
            model_name='technologyrecommendation',
            name='technology',
        ),
        migrations.RenameField(
            model_name='crop',
            old_name='description',
            new_name='cultivation_practices',
        ),
        migrations.RenameField(
            model_name='farmingexperience',
            old_name='years_of_experience',
            new_name='years_experience',
        ),
        migrations.RemoveField(
            model_name='farmdetail',
            name='irrigation_method',
        ),
        migrations.RemoveField(
            model_name='farmdetail',
            name='irrigation_source',
        ),
        migrations.RemoveField(
            model_name='farmdetail',
            name='is_certified_organic',
        ),
        migrations.RemoveField(
            model_name='farmerprofile',
            name='aadhaar_number',
        ),
        migrations.RemoveField(
            model_name='farmerprofile',
            name='phone_number',
        ),
        migrations.RemoveField(
            model_name='farmerprofile',
            name='taluk',
        ),
        migrations.RemoveField(
            model_name='farmerprofile',
            name='village',
        ),
        migrations.RemoveField(
            model_name='farmingexperience',
            name='average_yield',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='applicable_soil_types',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='description',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='max_cost',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='min_cost',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='min_farm_size',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='roi_description',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='subsidy_percentage',
        ),
        migrations.RemoveField(
            model_name='technology',
            name='subsidy_scheme',
        ),
        migrations.AddField(
            model_name='crop',
            name='avg_yield_q_per_ha',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='growing_season',
            field=models.CharField(default='All seasons', max_length=50),
        ),
        migrations.AddField(
            model_name='crop',
            name='k_requirement_kg_per_ha',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='max_temp_c',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='min_temp_c',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='n_requirement_kg_per_ha',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='p_requirement_kg_per_ha',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='crop',
            name='ph_range',
            field=models.CharField(default='6.0-7.0', max_length=20),
        ),
        migrations.AddField(
            model_name='crop',
            name='suitable_soil_types',
            field=models.TextField(default='All soil types'),
        ),
        migrations.AddField(
            model_name='crop',
            name='varieties',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='crop',
            name='water_requirement_mm',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='farmdetail',
            name='irrigation_sources',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='farmdetail',
            name='irrigation_systems',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='farmdetail',
            name='unit',
            field=models.CharField(default='Hectare', max_length=10),
        ),
        migrations.AddField(
            model_name='farmerinterest',
            name='challenges',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='farmerinterest',
            name='new_varieties_interest',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='farmerinterest',
            name='sustainable_practices',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='age',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='first_name',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='gender',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='last_name',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='mobile',
            field=models.CharField(default='', max_length=15),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='preferred_season',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='farmerprofile',
            name='state',
            field=models.CharField(default='Karnataka', max_length=100),
        ),
        migrations.AddField(
            model_name='farmingexperience',
            name='challenges_faced',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='farmingexperience',
            name='typical_yield',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='technology',
            name='district_availability',
            field=models.CharField(default='All districts', max_length=100),
        ),
        migrations.AddField(
            model_name='technology',
            name='implementation_cost',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='technology',
            name='roi_percentage',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='technology',
            name='suitable_crops',
            field=models.CharField(default='All', max_length=200),
        ),
        migrations.AddField(
            model_name='technology',
            name='supplier_contacts',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AddField(
            model_name='technology',
            name='technical_requirements',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='technology',
            name='training_needs',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='farmdetail',
            name='farm_size',
            field=models.FloatField(default=0),
        ),
        migrations.AlterField(
            model_name='farmdetail',
            name='land_ownership',
            field=models.CharField(choices=[('Owned', 'Owned'), ('Leased', 'Leased'), ('Shared', 'Shared')], default='Owned', max_length=10),
        ),
        migrations.AlterField(
            model_name='farmdetail',
            name='soil_type',
            field=models.CharField(choices=[('Black', 'Black Soil'), ('Red', 'Red Soil'), ('Alluvial', 'Alluvial Soil'), ('Laterite', 'Laterite Soil'), ('Sandy', 'Sandy Soil'), ('Clay', 'Clay Soil')], default='Black', max_length=20),
        ),
        migrations.AlterField(
            model_name='farmerprofile',
            name='district',
            field=models.CharField(default='', max_length=100),
        ),
        migrations.AlterField(
            model_name='farmerprofile',
            name='pincode',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AlterField(
            model_name='technology',
            name='category',
            field=models.CharField(choices=[('irrigation', 'Irrigation'), ('precision_agriculture', 'Precision Agriculture'), ('soil_management', 'Soil Management'), ('climate_monitoring', 'Climate Monitoring'), ('crop_management', 'Crop Management'), ('planting_technology', 'Planting Technology'), ('harvesting', 'Harvesting'), ('protected_cultivation', 'Protected Cultivation'), ('renewable_energy', 'Renewable Energy'), ('organic_fertilizer', 'Organic Fertilizer'), ('post_harvest', 'Post Harvest'), ('pest_control', 'Pest Control'), ('nutrient_management', 'Nutrient Management'), ('animal_husbandry', 'Animal Husbandry'), ('storage_technology', 'Storage Technology'), ('disease_detection', 'Disease Detection'), ('smart_irrigation', 'Smart Irrigation'), ('food_processing', 'Food Processing'), ('livestock_technology', 'Livestock Technology'), ('integrated_farming', 'Integrated Farming'), ('waste_management', 'Waste Management'), ('market_technology', 'Market Technology'), ('specialty_crops', 'Specialty Crops'), ('fodder_management', 'Fodder Management'), ('aquaculture', 'Aquaculture'), ('farm_protection', 'Farm Protection'), ('research_tool', 'Research Tool'), ('microclimate_monitoring', 'Microclimate Monitoring'), ('seed_technology', 'Seed Technology')], default='irrigation', max_length=50),
        ),
        migrations.AlterField(
            model_name='technology',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='CropEconomics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_of_cultivation_per_ha', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('expected_yield_q_per_ha', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('msp_per_quintal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('market_price_per_quintal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gross_income_per_ha', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_income_per_ha', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('roi_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='economics', to='main_app.crop')),
            ],
        ),
        migrations.CreateModel(
            name='FertilizerRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soil_type', models.CharField(max_length=50)),
                ('n_kg_per_ha', models.FloatField(default=0)),
                ('p_kg_per_ha', models.FloatField(default=0)),
                ('k_kg_per_ha', models.FloatField(default=0)),
                ('organic_alternatives', models.TextField(blank=True)),
                ('application_schedule', models.TextField(default='')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fertilizer_recommendations', to='main_app.crop')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annual_income', models.CharField(choices=[('below_50k', 'Below ₹50,000'), ('50k_1l', '₹50,000 - ₹1,00,000'), ('1l_3l', '₹1,00,000 - ₹3,00,000'), ('3l_5l', '₹3,00,000 - ₹5,00,000'), ('above_5l', 'Above ₹5,00,000')], default='below_50k', max_length=20)),
                ('loan_history', models.TextField(blank=True)),
                ('govt_schemes_enrolled', models.TextField(blank=True)),
                ('insurance_coverage', models.BooleanField(default=False)),
                ('bank_account', models.BooleanField(default=True)),
                ('farmer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_info', to='main_app.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='IrrigationRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_stage', models.CharField(max_length=50)),
                ('water_requirement_mm', models.FloatField(default=0)),
                ('critical_stages', models.TextField(blank=True)),
                ('irrigation_interval_days', models.IntegerField(default=7)),
                ('water_conservation_techniques', models.TextField(blank=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='irrigation_requirements', to='main_app.crop')),
            ],
        ),
        migrations.CreateModel(
            name='SoilCropCompatibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soil_type', models.CharField(max_length=50)),
                ('compatibility_score', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('yield_potential_percentage', models.IntegerField(default=70, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('special_requirements', models.TextField(blank=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soil_compatibilities', to='main_app.crop')),
            ],
        ),
        migrations.DeleteModel(
            name='Challenge',
        ),
        migrations.DeleteModel(
            name='FarmerChallenge',
        ),
        migrations.DeleteModel(
            name='Interest',
        ),
        migrations.DeleteModel(
            name='TechnologyRecommendation',
        ),
    ]
