# Generated by Django 5.1.7 on 2025-05-27 04:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('water_management', 'Water Management'), ('pest_control', 'Pest Control'), ('soil_health', 'Soil Health'), ('mechanization', 'Mechanization'), ('post_harvest', 'Post Harvest'), ('renewable_energy', 'Renewable Energy'), ('precision_farming', 'Precision Farming'), ('other', 'Other')], max_length=50)),
                ('min_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('subsidy_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('subsidy_scheme', models.CharField(blank=True, max_length=200)),
                ('roi_description', models.CharField(blank=True, max_length=200)),
                ('applicable_soil_types', models.CharField(blank=True, max_length=255)),
                ('min_farm_size', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('aadhaar_number', models.CharField(blank=True, max_length=12)),
                ('address', models.TextField(blank=True)),
                ('district', models.CharField(blank=True, max_length=100)),
                ('taluk', models.CharField(blank=True, max_length=100)),
                ('village', models.CharField(blank=True, max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=6)),
                ('education_level', models.CharField(blank=True, choices=[('none', 'No Formal Education'), ('primary', 'Primary Education'), ('secondary', 'Secondary Education'), ('higher_secondary', 'Higher Secondary'), ('graduate', 'Graduate'), ('post_graduate', 'Post Graduate')], max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmerChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')], default=2)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.challenge')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to='main_app.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FarmDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_size', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('soil_type', models.CharField(choices=[('red', 'Red Soil'), ('black', 'Black Soil'), ('sandy', 'Sandy Soil'), ('loamy', 'Loamy Soil'), ('clayey', 'Clayey Soil'), ('alluvial', 'Alluvial Soil')], max_length=20)),
                ('land_ownership', models.BooleanField(default=True)),
                ('irrigation_source', models.CharField(choices=[('well', 'Well'), ('bore_well', 'Bore Well'), ('canal', 'Canal'), ('rain_fed', 'Rain Fed'), ('river', 'River'), ('pond', 'Pond'), ('tank', 'Tank')], max_length=20)),
                ('irrigation_method', models.CharField(choices=[('flood', 'Flood Irrigation'), ('drip', 'Drip Irrigation'), ('sprinkler', 'Sprinkler Irrigation'), ('manual', 'Manual Irrigation')], max_length=20)),
                ('is_certified_organic', models.BooleanField(default=False)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to='main_app.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FarmingExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('average_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.crop')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='main_app.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to='main_app.farmerprofile')),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.interest')),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relevance_score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('recommendation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technology_recommendations', to='main_app.farmerprofile')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.technology')),
            ],
        ),
    ]
